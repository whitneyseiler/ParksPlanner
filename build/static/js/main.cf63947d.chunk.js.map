{"version":3,"sources":["components/Map.jsx","components/App.jsx","index.jsx"],"names":["mapboxgl","accessToken","Mapp","props","state","lng","lat","zoom","visited","map","renderListing","renderListings","bind","this","renderMap","context","features","popup","Popup","closeButton","filterEl","document","getElementById","Map","container","style","center","on","loadImage","err","image","addImage","addSource","type","addLayer","id","source","paint","filter","layout","parks","queryRenderedFeatures","layers","uniqueFeatures","getUniqueFeatures","value","e","featureId","UNIT_CODE","length","includes","splice","indexOf","setState","push","getCanvas","cursor","feature","setLngLat","geometry","coordinates","setText","properties","UNIT_NAME","addTo","remove","addEventListener","target","filtered","setFilter","array","comparatorProperty","existingFeatureKeys","el","listingEl","empty","createElement","innerHTML","forEach","prop","UNIT_TYPE","item","textContent","appendChild","parentNode","display","className","placeholder","ref","mapContainer","React","Component","App","sort","href","onClick","window","location","reload","ReactDOM","render"],"mappings":"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","file":"static/js/main.cf63947d.chunk.js","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2hpdG5leXNlaWxlciIsImEiOiJjamxxNWo4cXkyY2RzM3dzNnljdGkzNDB2In0.wR0jz' +\n    '3YiwL-UHC7OtUSMHQ';\n\nclass Mapp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2,\n      visited: []\n    };\n\n    this.map = null;\n    this.renderListing = this.renderListings.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap() {\n    const context = this;\n    // Holds visible airport features for filtering\n    var features = [];\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [\n        -100.486052, 37.830348\n      ],\n      zoom: 3\n    });\n    this.map = map;\n\n    map.on('load', () => {\n      map.loadImage('https://api.mapbox.com/v4/marker/pin-m-park+609321.png?access_token=pk.eyJ1IjoibnBzIiwiYSI6IkdfeS1OY1UifQ.K8Qn5ojTw4RV1GwBlsci-Q', function(err, image) {\n        if (err) throw err;\n        map.addImage('custom-marker', image);\n      });\n\n      map.addSource('parks-boundaries', {\n        type: 'geojson',\n        'data': \"https://gist.githubusercontent.com/erincaughey/2f221501645757e28b715c4063e87595/\" +\n            \"raw/a90be1b434b1a8cdf71c2abc3373ca63987e2d23/nps-geo-boundary.json\"\n      });\n\n      map.addSource('parks-markers', {\n        type: 'geojson',\n        'data': \"https://opendata.arcgis.com/datasets/c8d60ffcbf5c4030a17762fe10e81c6a_0.geojson\",\n      });\n\n      map.addLayer({\n        id: 'boundaries',\n        type: 'fill',\n        source: 'parks-boundaries',\n        paint: {\n          'fill-color': '#527E5B',\n          'fill-opacity': 0.6\n        },\n        filter: [ \"all\", \n          ['==', '$type', 'Polygon'],\n          [ '==', 'feature.properties.UNIT_TYPE', 'National Park' ]\n        ]\n      });\n\n      map.addLayer({\n        id: 'markers',\n        type: 'symbol',\n        source: 'parks-markers',\n        filter: [ '==', ['get', 'UNIT_TYPE'], 'National Park' ],\n        layout: {\n          'icon-image': 'custom-marker',\n          'icon-padding': 0,\n          'icon-allow-overlap': true,\n          'icon-size': 0.75\n        },\n        paint: {\n          'icon-color': 'red'\n        },\n      });\n\n      map.on('moveend', () => {\n        var parks = map.queryRenderedFeatures({ layers: ['markers'] });\n          \n        if (parks) {\n          var uniqueFeatures = context.getUniqueFeatures(parks, 'UNIT_NAME');\n          // Populate features for the listing overlay.\n          context.renderListings(uniqueFeatures);\n            \n          // Clear the input container\n          filterEl.value = '';\n            \n          // Store the current features in `features` variable to\n          // later use for filtering on `keyup`.\n          features = uniqueFeatures;\n        }\n      });\n\n      // When a click event occurs on a feature in the markers layer, open a\n      // popup at the location of the feature, with description HTML from its\n      // properties.\n      map.on('click', 'markers', (e) => {\n        const { visited } = this.state;\n        const featureId = e.features[0].UNIT_CODE;\n\n        if (e.features.length > 0) {\n          if (visited.includes(featureId)) {\n            visited.splice(visited.indexOf(featureId), 1);\n            this.setState({ visited });\n          } else {\n            visited.push(featureId)\n            this.setState({ visited });\n          }\n        }\n      });\n\n      map.on('mousemove', 'markers', (e) => {\n        map.getCanvas().style.cursor = 'pointer';\n          \n        var feature = e.features[0];\n        popup.setLngLat(feature.geometry.coordinates).setText(\n          feature.properties.UNIT_NAME\n        ).addTo(map);\n      });\n\n      map.on('mouseleave', 'markers', (e) => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n\n      filterEl.addEventListener('keyup', (e) => {\n        var value = e.target.value;\n        var filtered = features.filter(feature => {\n          var name = feature.properties.UNIT_NAME;\n          return name.indexOf(value) > -1;\n        });\n          \n        // Populate the sidebar with filtered results\n        context.renderListings(filtered);\n          \n        // Set the filter to populate features into the layer.\n        if (filtered.length) {\n          map.setFilter('markers', [\n            'match',\n            ['get', 'UNIT_NAME'],\n            filtered.map(function(feature) {\n              return feature.properties.UNIT_NAME;\n            }),\n            true,\n            false\n          ]);\n        }\n      });\n        \n      // Call this function on initialization\n      // passing an empty array to render an empty state\n      context.renderListings(features);\n    })\n  }\n\n  getUniqueFeatures(array, comparatorProperty) {\n    var existingFeatureKeys = {};\n    // Because features come from tiled vector data, feature geometries may be split\n    // or duplicated across tile boundaries and, as a result, features may appear\n    // multiple times in query results.\n    var uniqueFeatures = array.filter(el => {\n      if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n        return false;\n      } else {\n        existingFeatureKeys[el.properties[comparatorProperty]] = true;\n        return true;\n      }\n    });\n\n    return uniqueFeatures;\n  }\n\n  renderListings(features) {\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var empty = document.createElement('p');\n\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n\n    if (features.length) {\n      features.forEach(feature => {\n        var prop = feature.properties;\n        if (prop.UNIT_TYPE === 'National Park') {\n          var item = document.createElement('span');\n          item.textContent = prop.UNIT_NAME;\n          item.addEventListener('mouseover', () => {\n            // Highlight corresponding feature on the map\n            popup\n              .setLngLat(feature.geometry.coordinates)\n              .setText(feature.properties.UNIT_NAME )\n              .addTo(this.map);\n          });\n          listingEl.appendChild(item);\n        }\n      });\n\n      // Show the filter input\n      filterEl.parentNode.style.display = 'block';\n    } else if (features.length === 0 && filterEl.value !== '') {\n      empty.textContent = 'No results found';\n      listingEl.appendChild(empty);\n    } else {\n      empty.textContent = 'Drag the map to populate results';\n      listingEl.appendChild(empty);\n\n      // Hide the filter input\n      filterEl.parentNode.style.display = 'none';\n\n      // remove features filter\n      this.map.setFilter('markers', ['has', 'UNIT_TYPE']);\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"mapContainer\">\n        <div className=\"map-overlay\">\n          <fieldset>\n            <input id=\"feature-filter\" type=\"text\" placeholder=\"Filter results by name\"/>\n          </fieldset>\n          <div id=\"feature-listing\" className=\"listing\"></div>\n        </div>\n        <div id=\"map\" ref={el => this.mapContainer = el}/>\n      </section>\n    )\n  }\n}\n\nexport default Mapp;","import React from 'react';\nimport Map from './Map.jsx';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2hpdG5leXNlaWxlciIsImEiOiJjamxxNWo4cXkyY2RzM3dzNnljdGkzNDB2In0.wR0jz' +\n    '3YiwL-UHC7OtUSMHQ';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2,\n      visited: []\n    };\n\n    this.map = null;\n    this.renderListing = this.renderListings.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap() {\n    const context = this;\n    // Holds visible airport features for filtering\n    var features = [];\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [\n        -100.486052, 37.830348\n      ],\n      zoom: 3\n    });\n    this.map = map;\n\n    map.on('load', () => {\n      map.loadImage('https://api.mapbox.com/v4/marker/pin-m-park+609321.png?access_token=pk.eyJ1IjoibnBzIiwiYSI6IkdfeS1OY1UifQ.K8Qn5ojTw4RV1GwBlsci-Q', function(err, image) {\n        if (err) throw err;\n        map.addImage('custom-marker', image);\n      });\n\n      map.addSource('parks-boundaries', {\n        type: 'geojson',\n        'data': \"https://gist.githubusercontent.com/erincaughey/2f221501645757e28b715c4063e87595/\" +\n            \"raw/a90be1b434b1a8cdf71c2abc3373ca63987e2d23/nps-geo-boundary.json\"\n      });\n\n      map.addSource('parks-markers', {\n        type: 'geojson',\n        'data': \"https://opendata.arcgis.com/datasets/c8d60ffcbf5c4030a17762fe10e81c6a_0.geojson\",\n      });\n\n      map.addLayer({\n        id: 'boundaries',\n        type: 'fill',\n        source: 'parks-boundaries',\n        paint: {\n          'fill-color': '#527E5B',\n          'fill-opacity': 0.6\n        },\n        filter: [ \"all\", \n          ['==', '$type', 'Polygon'],\n          [ '==', 'feature.properties.UNIT_TYPE', 'National Park' ]\n        ]\n      });\n\n      map.addLayer({\n        id: 'markers',\n        type: 'symbol',\n        source: 'parks-markers',\n        filter: [ '==', ['get', 'UNIT_TYPE'], 'National Park' ],\n        layout: {\n          'icon-image': 'custom-marker',\n          'icon-padding': 0,\n          'icon-allow-overlap': true,\n          'icon-size': 0.75\n        },\n        paint: {\n          'icon-color': 'red'\n        },\n      });\n\n      map.on('moveend', () => {\n        var parks = map.queryRenderedFeatures({ layers: ['markers'] });\n          \n        if (parks) {\n          var uniqueFeatures = context.getUniqueFeatures(parks, 'UNIT_NAME');\n          // Populate features for the listing overlay.\n          context.renderListings(uniqueFeatures);\n            \n          // Clear the input container\n          filterEl.value = '';\n            \n          // Store the current features in `features` variable to\n          // later use for filtering on `keyup`.\n          features = uniqueFeatures;\n        }\n      });\n\n      // When a click event occurs on a feature in the markers layer, open a\n      // popup at the location of the feature, with description HTML from its\n      // properties.\n      map.on('click', 'markers', (e) => {\n        const { visited } = this.state;\n        const featureId = e.features[0].UNIT_CODE;\n\n        if (e.features.length > 0) {\n          if (visited.includes(featureId)) {\n            visited.splice(visited.indexOf(featureId), 1);\n            this.setState({ visited });\n          } else {\n            visited.push(featureId)\n            this.setState({ visited });\n          }\n        }\n      });\n\n      map.on('mousemove', 'markers', (e) => {\n        map.getCanvas().style.cursor = 'pointer';\n          \n        var feature = e.features[0];\n        popup.setLngLat(feature.geometry.coordinates).setText(\n          feature.properties.UNIT_NAME\n        ).addTo(map);\n      });\n\n      map.on('mouseleave', 'markers', (e) => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n\n      filterEl.addEventListener('keyup', (e) => {\n        var value = e.target.value;\n        var filtered = features.filter(feature => {\n          var name = feature.properties.UNIT_NAME;\n          return name.indexOf(value) > -1;\n        });\n          \n        // Populate the sidebar with filtered results\n        context.renderListings(filtered);\n          \n        // Set the filter to populate features into the layer.\n        if (filtered.length) {\n          map.setFilter('markers', [\n            'match',\n            ['get', 'UNIT_NAME'],\n            filtered.map(function(feature) {\n              return feature.properties.UNIT_NAME;\n            }),\n            true,\n            false\n          ]);\n        }\n      });\n        \n      // Call this function on initialization\n      // passing an empty array to render an empty state\n      context.renderListings(features);\n    })\n  }\n\n  getUniqueFeatures(array, comparatorProperty) {\n    var existingFeatureKeys = {};\n    // Because features come from tiled vector data, feature geometries may be split\n    // or duplicated across tile boundaries and, as a result, features may appear\n    // multiple times in query results.\n    var uniqueFeatures = array.filter(el => {\n      if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n        return false;\n      } else {\n        existingFeatureKeys[el.properties[comparatorProperty]] = true;\n        return true;\n      }\n    });\n\n    return uniqueFeatures;\n  }\n\n  renderListings(features) {\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var empty = document.createElement('p');\n\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n\n    if (features.length) {\n      features.sort();\n      features.forEach(feature => {\n        var prop = feature.properties;\n        if (prop.UNIT_TYPE === 'National Park') {\n          // Render link to NPS page for each park\n          var item = document.createElement('a');\n          item.href = `http://nps.gov/${prop.UNIT_CODE}`;\n          item.textContent = prop.UNIT_NAME;\n          item.target = \"_blank\";\n          item.addEventListener('mouseover', () => {\n            // Highlight corresponding feature on the map\n            popup\n              .setLngLat(feature.geometry.coordinates)\n              .setText(feature.properties.UNIT_NAME )\n              .addTo(this.map);\n          });\n          listingEl.appendChild(item);\n        }\n      });\n\n      // Show the filter input\n      filterEl.parentNode.style.display = 'block';\n    } else if (features.length === 0 && filterEl.value !== '') {\n      empty.textContent = 'No results found';\n      listingEl.appendChild(empty);\n    } else {\n      empty.textContent = 'Drag the map to populate results';\n      listingEl.appendChild(empty);\n\n      // Hide the filter input\n      filterEl.parentNode.style.display = 'none';\n\n      // remove features filter\n      this.map.setFilter('markers', ['has', 'UNIT_TYPE']);\n    }\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        <header className=\"header\">\n          <h1 className=\"brand-logo center\" onClick={() => window.location.reload()}>Parks Planner</h1>\n          <h4>“I haven’t been everywhere, but it’s on my list.” - Susan Sontag</h4>\n          <nav></nav>\n        </header>\n        <Map/>\n      </main>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}