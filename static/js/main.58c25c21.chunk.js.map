{"version":3,"sources":["components/Map.jsx","components/Search.jsx","components/App.jsx","index.jsx"],"names":["Map","className","id","Search","clearSearch","type","autoComplete","htmlFor","onClick","mapboxgl","accessToken","App","props","state","lng","lat","zoom","visited","map","renderListing","renderListings","bind","this","renderMap","context","features","filterEl","document","getElementById","container","style","center","on","loadImage","err","image","addImage","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","addSource","addLayer","source","paint","filter","layout","parks","queryRenderedFeatures","layers","uniqueFeatures","getUniqueFeatures","value","e","coordinates","geometry","slice","name","properties","UNIT_NAME","code","UNIT_CODE","Math","abs","lngLat","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","addEventListener","target","filtered","feature","indexOf","length","setFilter","array","comparatorProperty","existingFeatureKeys","el","listingEl","popup","closeButton","empty","createElement","innerHTML","forEach","prop","item","href","textContent","setText","appendChild","parentNode","display","window","location","reload","handleClearSearch","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.58c25c21.chunk.js","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nconst Map = () => {\n  return (\n    <section className=\"mapContainer\">\n      <div className=\"map-overlay\">\n        <div id=\"feature-listing\" className=\"listing\"></div>\n      </div>\n      <div id=\"map\"/>\n    </section>\n  )\n}\n\nexport default Map;","import React from 'react';\nimport {Row, Input, Button} from 'react-materialize'\n\nlet Search = ({clearSearch}) => {\n    return (\n\t\t\t<div className=\"nav-wrapper\">\n\t\t\t\t<form>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<input id=\"feature-filter\" type=\"search\" autoComplete=\"off\" />\n\t\t\t\t\t\t<label className=\"label-icon\" htmlFor=\"search\">\n\t\t\t\t\t\t\t<i className=\"material-icons\">search</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<i className=\"material-icons\" onClick={() => clearSearch()}>close</i>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport Map from './Map.jsx';\nimport Search from './Search.jsx';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2hpdG5leXNlaWxlciIsImEiOiJjamxxNWo4cXkyY2RzM3dzNnljdGkzNDB2In0.wR0jz' +\n    '3YiwL-UHC7OtUSMHQ';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2,\n      visited: []\n    };\n\n    this.map = null;\n    this.renderListing = this.renderListings.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap() {\n    const context = this;\n    var features = [];\n    var filterEl = document.getElementById('feature-filter');\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/whitneyseiler/ckejl2wga0fif19pfp7ri2jwl',\n      center: [\n        -100.486052, 37.830348\n      ],\n      zoom: 3\n    });\n    this.map = map;\n\n    map.on('load', () => {\n      map.loadImage('https://api.mapbox.com/v4/marker/pin-m-park+609321.png?access_token=pk.eyJ1IjoibnBzIiwiYSI6IkdfeS1OY1UifQ.K8Qn5ojTw4RV1GwBlsci-Q', function(err, image) {\n        if (err) throw err;\n        map.addImage('custom-marker', image);\n      });\n\n      // Add navigation controll to map\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocate control to the map.\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true\n          },\n          trackUserLocation: true\n        })\n      );\n\n      map.addSource('dem', {\n        'type': 'raster-dem',\n        'url': 'mapbox://mapbox.terrain-rgb'\n      });\n\n      map.addLayer({\n        'id': 'hillshading',\n        'source': 'dem',\n        'type': 'hillshade'\n      });\n\n      map.addSource('parks-boundaries', {\n        type: 'geojson',\n        'data': \"https://gist.githubusercontent.com/erincaughey/2f221501645757e28b715c4063e87595/\" +\n            \"raw/a90be1b434b1a8cdf71c2abc3373ca63987e2d23/nps-geo-boundary.json\"\n      });\n\n      map.addSource('parks-markers', {\n        type: 'geojson',\n        'data': \"https://opendata.arcgis.com/datasets/c8d60ffcbf5c4030a17762fe10e81c6a_0.geojson\",\n      });\n\n      map.addLayer({\n        id: 'boundaries',\n        type: 'fill',\n        source: 'parks-boundaries',\n        paint: {\n          'fill-color': '#527E5B',\n          'fill-opacity': 0.4\n        },\n        filter: ['==', '$type', 'Polygon']\n      });\n\n      map.addLayer({\n        id: 'markers',\n        type: 'symbol',\n        source: 'parks-markers',\n        filter: [ '==', ['get', 'UNIT_TYPE'], 'National Park' ],\n        layout: {\n          'icon-image': 'custom-marker',\n          'icon-padding': 0,\n          'icon-allow-overlap': true,\n          'icon-size': 0.75\n        },\n        paint: {\n          'icon-color': 'red'\n        },\n      });\n\n      map.on('moveend', () => {\n        var parks = map.queryRenderedFeatures({ layers: ['markers'] });\n          \n        if (parks) {\n          var uniqueFeatures = context.getUniqueFeatures(parks, 'UNIT_NAME');\n          // Populate features for the listing overlay.\n          context.renderListings(uniqueFeatures);\n            \n          // Clear the input container\n          filterEl.value = '';\n            \n          // Store the current features in `features` variable to\n          // later use for filtering on `keyup`.\n          features = uniqueFeatures;\n        }\n      });\n\n      // When a click event occurs on a feature in the markers layer, open a\n      // popup at the location of the feature, with description HTML from its\n      // properties.\n      map.on('click', 'markers', function(e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var name = e.features[0].properties.UNIT_NAME;\n        var code = e.features[0].properties.UNIT_CODE;\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`<a href=\"http://nps.gov/${code}\">${name}</a>`)\n          .addTo(map);\n      });\n\n     // Change the cursor to a pointer when the mouse is over the places layer.\n      map.on('mouseenter', 'markers', function() {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      \n      // Change it back to a pointer when it leaves.\n      map.on('mouseleave', 'markers', function() {\n        map.getCanvas().style.cursor = '';\n      });\n\n      filterEl.addEventListener('keyup', (e) => {\n        var value = e.target.value;\n        var filtered = features.filter(feature => {\n          var name = feature.properties.UNIT_NAME;\n          return name.indexOf(value) > -1;\n        });\n          \n        // Populate the sidebar with filtered results\n        context.renderListings(filtered);\n          \n        // Set the filter to populate features into the layer.\n        if (filtered.length) {\n          map.setFilter('markers', [\n            'match',\n            ['get', 'UNIT_NAME'],\n            filtered.map(function(feature) {\n              return feature.properties.UNIT_NAME;\n            }),\n            true,\n            false\n          ]);\n        }\n      });\n        \n      // Call this function on initialization\n      // passing an empty array to render an empty state\n      context.renderListings(features);\n    })\n  }\n\n  // Gets list of unique features (name) from parks data\n  getUniqueFeatures(array, comparatorProperty) {\n    var existingFeatureKeys = {};\n    // Because features come from tiled vector data, feature geometries may be split\n    // or duplicated across tile boundaries and, as a result, features may appear\n    // multiple times in query results.\n    var uniqueFeatures = array.filter(el => {\n      if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n        return false;\n      } else {\n        existingFeatureKeys[el.properties[comparatorProperty]] = true;\n        return true;\n      }\n    });\n\n    return uniqueFeatures;\n  }\n\n  // Renders list of park names in left sidebar\n  renderListings(features) {\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var empty = document.createElement('p');\n\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n\n    if (features.length) {\n      features.forEach(feature => {\n        var prop = feature.properties;\n        var item = document.createElement('a');\n        item.href = `http://nps.gov/${prop.UNIT_CODE}`;\n        item.textContent = prop.UNIT_NAME;\n        item.target = \"_blank\";\n        item.addEventListener('mouseover', () => {\n          // Highlight corresponding feature on the map\n          popup\n            .setLngLat(feature.geometry.coordinates)\n            .setText(feature.properties.UNIT_NAME )\n            .addTo(this.map);\n        });\n        listingEl.appendChild(item);\n      });\n\n      // Show the filter input\n      filterEl.parentNode.style.display = 'block';\n    } else if (features.length === 0 && filterEl.value !== '') {\n      empty.textContent = 'No results found';\n      listingEl.appendChild(empty);\n    } else {\n      empty.textContent = 'Drag the map to populate results';\n      listingEl.appendChild(empty);\n\n      // Hide the filter input\n      filterEl.parentNode.style.display = 'none';\n\n      // remove features filter\n      this.map.setFilter('markers', ['has', 'UNIT_TYPE']);\n    }\n  }\n\n  handleClearSearch() {\n    const search = document.getElementById('feature-filter');\n    search.value = '';\n    this.renderMap();\n  }\n\n  render() {\n    return (\n      <main className=\"main\">\n        <header className=\"header\">\n          <h1 className=\"brand-logo center\" onClick={() => window.location.reload()}>Parks Planner</h1>\n          <h4>“I haven’t been everywhere, but it’s on my list.” - Susan Sontag</h4>\n          <nav>\n            <Search clearSearch={() => this.handleClearSearch(this)}/>\n          </nav>\n        </header>\n        <Map/>\n      </main>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}