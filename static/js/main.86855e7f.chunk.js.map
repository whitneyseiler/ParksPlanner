{"version":3,"sources":["components/Map.jsx","components/App.jsx","index.jsx"],"names":["mapboxgl","accessToken","Map","props","state","lng","lat","zoom","visited","map","renderListing","renderListings","bind","this","renderMap","context","features","filterEl","Popup","closeButton","document","getElementById","container","style","center","on","loadImage","err","image","addImage","addControl","NavigationControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","addSource","addLayer","type","id","source","paint","filter","layout","parks","queryRenderedFeatures","layers","uniqueFeatures","getUniqueFeatures","value","e","coordinates","geometry","slice","name","properties","UNIT_NAME","code","UNIT_CODE","Math","abs","lngLat","setLngLat","setHTML","addTo","getCanvas","cursor","addEventListener","target","filtered","feature","indexOf","length","setFilter","array","comparatorProperty","existingFeatureKeys","el","listingEl","popup","empty","createElement","innerHTML","forEach","prop","item","href","textContent","setText","appendChild","parentNode","display","className","placeholder","ref","mapContainer","React","Component","App","onClick","window","location","reload","ReactDOM","render"],"mappings":"mNAGAA,IAASC,YAAc,oG,IAuQRC,E,kDAnQb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,IAAK,EACLC,IAAK,GACLC,KAAM,EACNC,QAAS,IAGX,EAAKC,IAAM,KACX,EAAKC,cAAgB,EAAKC,eAAeC,KAApB,gBAXJ,E,gEAejBC,KAAKC,c,kCAIL,IAAMC,EAAUF,KAEZG,EAAW,GAEXC,GADQ,IAAIjB,IAASkB,MAAM,CAACC,aAAa,IAC9BC,SAASC,eAAe,mBAGnCZ,GAFYW,SAASC,eAAe,mBAE9B,IAAIrB,IAASE,IAAI,CACzBoB,UAAW,MACXC,MAAO,sCACPC,OAAQ,EACL,WAAY,WAEfjB,KAAM,KAERM,KAAKJ,IAAMA,EAEXA,EAAIgB,GAAG,QAAQ,WACbhB,EAAIiB,UAAU,oIAAoI,SAASC,EAAKC,GAC9J,GAAID,EAAK,MAAMA,EACflB,EAAIoB,SAAS,gBAAiBD,MAIhCnB,EAAIqB,WAAW,IAAI9B,IAAS+B,mBAG5BtB,EAAIqB,WACF,IAAI9B,IAASgC,iBAAiB,CAC5BC,gBAAiB,CACfC,oBAAoB,GAEtBC,mBAAmB,KAIvB1B,EAAI2B,UAAU,MAAO,CACnB,KAAQ,aACR,IAAO,gCAGT3B,EAAI4B,SAAS,CACX,GAAM,cACN,OAAU,MACV,KAAQ,cAGV5B,EAAI2B,UAAU,mBAAoB,CAChCE,KAAM,UACN,KAAQ,uJAIV7B,EAAI2B,UAAU,gBAAiB,CAC7BE,KAAM,UACN,KAAQ,oFAGV7B,EAAI4B,SAAS,CACXE,GAAI,aACJD,KAAM,OACNE,OAAQ,mBACRC,MAAO,CACL,aAAc,UACd,eAAgB,IAElBC,OAAQ,CAAC,KAAM,QAAS,aAG1BjC,EAAI4B,SAAS,CACXE,GAAI,UACJD,KAAM,SACNE,OAAQ,gBACRE,OAAQ,CAAE,KAAM,CAAC,MAAO,aAAc,iBACtCC,OAAQ,CACN,aAAc,gBACd,eAAgB,EAChB,sBAAsB,EACtB,YAAa,KAEfF,MAAO,CACL,aAAc,SAIlBhC,EAAIgB,GAAG,WAAW,WAChB,IAAImB,EAAQnC,EAAIoC,sBAAsB,CAAEC,OAAQ,CAAC,aAEjD,GAAIF,EAAO,CACT,IAAIG,EAAiBhC,EAAQiC,kBAAkBJ,EAAO,aAEtD7B,EAAQJ,eAAeoC,GAGvB9B,EAASgC,MAAQ,GAIjBjC,EAAW+B,MAOftC,EAAIgB,GAAG,QAAS,WAAW,SAASyB,GAQlC,IAPA,IAAIC,EAAcD,EAAElC,SAAS,GAAGoC,SAASD,YAAYE,QACjDC,EAAOJ,EAAElC,SAAS,GAAGuC,WAAWC,UAChCC,EAAOP,EAAElC,SAAS,GAAGuC,WAAWG,UAK7BC,KAAKC,IAAIV,EAAEW,OAAOxD,IAAM8C,EAAY,IAAM,KAC/CA,EAAY,IAAMD,EAAEW,OAAOxD,IAAM8C,EAAY,GAAK,KAAO,KAG3D,IAAInD,IAASkB,OACV4C,UAAUX,GACVY,QAFH,kCAEsCN,EAFtC,aAE+CH,EAF/C,SAGGU,MAAMvD,MAIXA,EAAIgB,GAAG,aAAc,WAAW,WAC9BhB,EAAIwD,YAAY1C,MAAM2C,OAAS,aAIjCzD,EAAIgB,GAAG,aAAc,WAAW,WAC9BhB,EAAIwD,YAAY1C,MAAM2C,OAAS,MAGjCjD,EAASkD,iBAAiB,SAAS,SAACjB,GAClC,IAAID,EAAQC,EAAEkB,OAAOnB,MACjBoB,EAAWrD,EAAS0B,QAAO,SAAA4B,GAE7B,OADWA,EAAQf,WAAWC,UAClBe,QAAQtB,IAAU,KAIhClC,EAAQJ,eAAe0D,GAGnBA,EAASG,QACX/D,EAAIgE,UAAU,UAAW,CACvB,QACA,CAAC,MAAO,aACRJ,EAAS5D,KAAI,SAAS6D,GACpB,OAAOA,EAAQf,WAAWC,cAE5B,GACA,OAONzC,EAAQJ,eAAeK,Q,wCAKT0D,EAAOC,GACvB,IAAIC,EAAsB,GAa1B,OATqBF,EAAMhC,QAAO,SAAAmC,GAChC,OAAID,EAAoBC,EAAGtB,WAAWoB,MAGpCC,EAAoBC,EAAGtB,WAAWoB,KAAuB,GAClD,Q,qCAQE3D,GAAW,IAAD,OACnBC,EAAWG,SAASC,eAAe,kBACnCyD,EAAY1D,SAASC,eAAe,mBACpC0D,EAAQ,IAAI/E,IAASkB,MAAM,CAACC,aAAa,IACzC6D,EAAQ5D,SAAS6D,cAAc,KAGnCH,EAAUI,UAAY,GAElBlE,EAASwD,QACXxD,EAASmE,SAAQ,SAAAb,GACf,IAAIc,EAAOd,EAAQf,WACf8B,EAAOjE,SAAS6D,cAAc,KAClCI,EAAKC,KAAL,yBAA8BF,EAAK1B,WACnC2B,EAAKE,YAAcH,EAAK5B,UACxB6B,EAAKjB,OAAS,SACdiB,EAAKlB,iBAAiB,aAAa,WAEjCY,EACGjB,UAAUQ,EAAQlB,SAASD,aAC3BqC,QAAQlB,EAAQf,WAAWC,WAC3BQ,MAAM,EAAKvD,QAEhBqE,EAAUW,YAAYJ,MAIxBpE,EAASyE,WAAWnE,MAAMoE,QAAU,SACP,IAApB3E,EAASwD,QAAmC,KAAnBvD,EAASgC,OAC3C+B,EAAMO,YAAc,mBACpBT,EAAUW,YAAYT,KAEtBA,EAAMO,YAAc,mCACpBT,EAAUW,YAAYT,GAGtB/D,EAASyE,WAAWnE,MAAMoE,QAAU,OAGpC9E,KAAKJ,IAAIgE,UAAU,UAAW,CAAC,MAAO,iB,+BAIhC,IAAD,OACP,OACE,6BAASmB,UAAU,gBACjB,yBAAKA,UAAU,eACb,kCACE,2BAAOrD,GAAG,iBAAiBD,KAAK,OAAOuD,YAAY,4BAErD,yBAAKtD,GAAG,kBAAkBqD,UAAU,aAEtC,yBAAKrD,GAAG,MAAMuD,IAAK,SAAAjB,GAAE,OAAI,EAAKkB,aAAelB,U,GA9PnCmB,IAAMC,WCUTC,EAbL,WACR,OACE,0BAAMN,UAAU,QACd,4BAAQA,UAAU,UAChB,wBAAIA,UAAU,oBAAoBO,QAAS,kBAAMC,OAAOC,SAASC,WAAjE,iBACA,oHACA,+BAEF,kBAAC,EAAD,QCPNC,IAASC,OAAO,kBAAC,EAAD,MAASpF,SAASC,eAAe,S","file":"static/js/main.86855e7f.chunk.js","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2hpdG5leXNlaWxlciIsImEiOiJjamxxNWo4cXkyY2RzM3dzNnljdGkzNDB2In0.wR0jz' +\n    '3YiwL-UHC7OtUSMHQ';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2,\n      visited: []\n    };\n\n    this.map = null;\n    this.renderListing = this.renderListings.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap() {\n    const context = this;\n    // Holds visible airport features for filtering\n    var features = [];\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: [\n        -100.486052, 37.830348\n      ],\n      zoom: 3\n    });\n    this.map = map;\n\n    map.on('load', () => {\n      map.loadImage('https://api.mapbox.com/v4/marker/pin-m-park+609321.png?access_token=pk.eyJ1IjoibnBzIiwiYSI6IkdfeS1OY1UifQ.K8Qn5ojTw4RV1GwBlsci-Q', function(err, image) {\n        if (err) throw err;\n        map.addImage('custom-marker', image);\n      });\n\n      // Add navigation controll to map\n      map.addControl(new mapboxgl.NavigationControl());\n\n      // Add geolocate control to the map.\n      map.addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n            enableHighAccuracy: true\n          },\n          trackUserLocation: true\n        })\n      );\n\n      map.addSource('dem', {\n        'type': 'raster-dem',\n        'url': 'mapbox://mapbox.terrain-rgb'\n      });\n\n      map.addLayer({\n        'id': 'hillshading',\n        'source': 'dem',\n        'type': 'hillshade'\n      });\n\n      map.addSource('parks-boundaries', {\n        type: 'geojson',\n        'data': \"https://gist.githubusercontent.com/erincaughey/2f221501645757e28b715c4063e87595/\" +\n            \"raw/a90be1b434b1a8cdf71c2abc3373ca63987e2d23/nps-geo-boundary.json\"\n      });\n\n      map.addSource('parks-markers', {\n        type: 'geojson',\n        'data': \"https://opendata.arcgis.com/datasets/c8d60ffcbf5c4030a17762fe10e81c6a_0.geojson\",\n      });\n\n      map.addLayer({\n        id: 'boundaries',\n        type: 'fill',\n        source: 'parks-boundaries',\n        paint: {\n          'fill-color': '#527E5B',\n          'fill-opacity': 0.6\n        },\n        filter: ['==', '$type', 'Polygon']\n      });\n\n      map.addLayer({\n        id: 'markers',\n        type: 'symbol',\n        source: 'parks-markers',\n        filter: [ '==', ['get', 'UNIT_TYPE'], 'National Park' ],\n        layout: {\n          'icon-image': 'custom-marker',\n          'icon-padding': 0,\n          'icon-allow-overlap': true,\n          'icon-size': 0.75\n        },\n        paint: {\n          'icon-color': 'red'\n        },\n      });\n\n      map.on('moveend', () => {\n        var parks = map.queryRenderedFeatures({ layers: ['markers'] });\n          \n        if (parks) {\n          var uniqueFeatures = context.getUniqueFeatures(parks, 'UNIT_NAME');\n          // Populate features for the listing overlay.\n          context.renderListings(uniqueFeatures);\n            \n          // Clear the input container\n          filterEl.value = '';\n            \n          // Store the current features in `features` variable to\n          // later use for filtering on `keyup`.\n          features = uniqueFeatures;\n        }\n      });\n\n      // When a click event occurs on a feature in the markers layer, open a\n      // popup at the location of the feature, with description HTML from its\n      // properties.\n      map.on('click', 'markers', function(e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var name = e.features[0].properties.UNIT_NAME;\n        var code = e.features[0].properties.UNIT_CODE;\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`<a href=\"http://nps.gov/${code}\">${name}</a>`)\n          .addTo(map);\n      });\n\n     // Change the cursor to a pointer when the mouse is over the places layer.\n      map.on('mouseenter', 'markers', function() {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      \n      // Change it back to a pointer when it leaves.\n      map.on('mouseleave', 'markers', function() {\n        map.getCanvas().style.cursor = '';\n      });\n\n      filterEl.addEventListener('keyup', (e) => {\n        var value = e.target.value;\n        var filtered = features.filter(feature => {\n          var name = feature.properties.UNIT_NAME;\n          return name.indexOf(value) > -1;\n        });\n          \n        // Populate the sidebar with filtered results\n        context.renderListings(filtered);\n          \n        // Set the filter to populate features into the layer.\n        if (filtered.length) {\n          map.setFilter('markers', [\n            'match',\n            ['get', 'UNIT_NAME'],\n            filtered.map(function(feature) {\n              return feature.properties.UNIT_NAME;\n            }),\n            true,\n            false\n          ]);\n        }\n      });\n        \n      // Call this function on initialization\n      // passing an empty array to render an empty state\n      context.renderListings(features);\n    })\n  }\n\n  // Gets list of unique features (name) from parks data\n  getUniqueFeatures(array, comparatorProperty) {\n    var existingFeatureKeys = {};\n    // Because features come from tiled vector data, feature geometries may be split\n    // or duplicated across tile boundaries and, as a result, features may appear\n    // multiple times in query results.\n    var uniqueFeatures = array.filter(el => {\n      if (existingFeatureKeys[el.properties[comparatorProperty]]) {\n        return false;\n      } else {\n        existingFeatureKeys[el.properties[comparatorProperty]] = true;\n        return true;\n      }\n    });\n\n    return uniqueFeatures;\n  }\n\n  // Renders list of park names in left sidebar\n  renderListings(features) {\n    var filterEl = document.getElementById('feature-filter');\n    var listingEl = document.getElementById('feature-listing');\n    var popup = new mapboxgl.Popup({closeButton: false});\n    var empty = document.createElement('p');\n\n    // Clear any existing listings\n    listingEl.innerHTML = '';\n\n    if (features.length) {\n      features.forEach(feature => {\n        var prop = feature.properties;\n        var item = document.createElement('a');\n        item.href = `http://nps.gov/${prop.UNIT_CODE}`;\n        item.textContent = prop.UNIT_NAME;\n        item.target = \"_blank\";\n        item.addEventListener('mouseover', () => {\n          // Highlight corresponding feature on the map\n          popup\n            .setLngLat(feature.geometry.coordinates)\n            .setText(feature.properties.UNIT_NAME )\n            .addTo(this.map);\n        });\n        listingEl.appendChild(item);\n      });\n\n      // Show the filter input\n      filterEl.parentNode.style.display = 'block';\n    } else if (features.length === 0 && filterEl.value !== '') {\n      empty.textContent = 'No results found';\n      listingEl.appendChild(empty);\n    } else {\n      empty.textContent = 'Drag the map to populate results';\n      listingEl.appendChild(empty);\n\n      // Hide the filter input\n      filterEl.parentNode.style.display = 'none';\n\n      // remove features filter\n      this.map.setFilter('markers', ['has', 'UNIT_TYPE']);\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"mapContainer\">\n        <div className=\"map-overlay\">\n          <fieldset>\n            <input id=\"feature-filter\" type=\"text\" placeholder=\"Filter results by name\"/>\n          </fieldset>\n          <div id=\"feature-listing\" className=\"listing\"></div>\n        </div>\n        <div id=\"map\" ref={el => this.mapContainer = el}/>\n      </section>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\nimport Map from './Map.jsx';\n\nlet App = () => {\n  return (\n    <main className=\"main\">\n      <header className=\"header\">\n        <h1 className=\"brand-logo center\" onClick={() => window.location.reload()}>Parks Planner</h1>\n        <h4>“I haven’t been everywhere, but it’s on my list.” - Susan Sontag</h4>\n        <nav></nav>\n      </header>\n      <Map/>\n    </main>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));"],"sourceRoot":""}